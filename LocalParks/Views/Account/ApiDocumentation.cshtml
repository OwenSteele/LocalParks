@model LocalParksUserModel
@{
    ViewData["Title"] = "Your Account";
}

@if (Model != null)
{
    <partial name="_AccountNavBar" />
}

<div class="container">

    <h1>Local Parks Public API documentation</h1>

    <a href="https://localparksapiapi.azurewebsites.net/swagger" class="card bg-info m-1 p-2" target="_blank" rel="noopener noreferrer">
        <h2 class="font-weight-bolder text-white">See Swagger Docs!</h2>
    </a>

    <div class=" m-2 p-2 container flex-wrap text-wrap text-break">

        <div class="row card alert-dark col-md-8 offset-md-2">
            <p class="font-weight-bolder alert-heading">You must have a valid access token to use any part of the API!</p>

            <p class="border-info">When you are familiar with the API, you can request a token, <a class="btn-success rounded" asp-action="TokenGenerator">here!</a></p>
            <p class="border-info">Add your token to an Authorization header, value = "bearer {your token here}"</p>
        </div>
        <div class="row  alert-dark col-md-8 offset-md-2">
            <h3>API Endpoint:</h3>
            <div class="row card border-dark d-block shadow-lg bg-dark text-light rounded p-1 m-1 " style="font-family: 'Lucida Console';">
                <p class="text-wrap">https://localparksapi.azurewebsites.net/api/</p>
            </div>
            <p>There is no landing page for this URL, refer to this page for any help using the API.</p>
        </div>

        <div class="row  alert-dark col-md-8 offset-md-2">
            <h3>Parks</h3>
            <div class="row card border-dark d-block shadow-lg bg-dark text-light rounded p-1 m-1 " style="font-family: 'Lucida Console';">
                <p class="text-wrap">https://localparksapi.azurewebsites.net/api/parks</p>
            </div>
            <p><i class="fas fa-check-square"> </i> "/api/parks" - returns all parks, including their respective supervisors, sports clubs and scheduled events.</p>
            <p><i class="fas fa-check-square"> </i> "/api/parks/parkId" - where 'parkId' is an integer value, this will return a singular park, with the matching parkId.</p>
            <p><i class="fas fa-check-square"> </i> "/api/parks/parkName" - where 'parkName' is a string value, this will return a singular park, with the matching ParkName.</p>
            <p><i class="fas fa-spinner fa-pulse"></i> The parks endpoint can be used with other parts of Local Parks, for example: "api/parks/1/supervisor".</p>
        </div>

        <div class="row  alert-dark col-md-8 offset-md-2">
            <h3>Postcodes</h3>
            <div class="row card border-dark d-block shadow-lg bg-dark text-light rounded p-1 m-1 " style="font-family: 'Lucida Console';">
                <p class="text-wrap">https://localparksapi.azurewebsites.net/api/postcodes</p>
            </div>
            <p><i class="fas fa-check-square"> </i> "/api/postcodes" - returns all postcodes, including their respective parks.</p>
            <p><i class="fas fa-check-square"> </i> "/api/postcodes/postcodeZone" - where 'postcodeZone' is a string value, this will return a singular postode including it's parks.</p>
        </div>

        <div class="row  alert-dark col-md-8 offset-md-2">
            <h3>Supervisors</h3>
            <div class="row card border-dark d-block shadow-lg bg-dark text-light rounded p-1 m-1 " style="font-family: 'Lucida Console';">
                <p class="text-wrap">https://localparksapi.azurewebsites.net/api/supervisors</p>
            </div>
            <p><i class="fas fa-spinner fa-pulse"></i> Supervisor data can be requested through this endpoint, or through the parks endpoint, as mentioned above.</p>
            <p><i class="fas fa-check-square"></i> "api/supervisors" - returns all supervisors, with their listed parks that they manage.</p>
            <p><i class="fas fa-check-square"></i> "api/supervisors/parkId" - where 'parkId' is the park that this supervisor supervises. Note the is the same data as obtained from: "api/parks/1/supervisor".</p>
            <p><i class="fa fa-exclamation"></i> Please note: Supervisors are directly linked to parks and therefore are not stored if not associated with a park, however parks may be in the process of hiring and not have an allocated supervisor</p>
        </div>

        <div class="row  alert-dark col-md-8 offset-md-2">
            <h3>Sports Clubs</h3>
            <div class="row card border-dark d-block shadow-lg bg-dark text-light rounded p-1 m-1 " style="font-family: 'Lucida Console';">
                <p class="text-wrap">https://localparksapi.azurewebsites.net/api/sportsclubs</p>
            </div>
            <p><i class="fas fa-spinner fa-pulse"></i> Supervisor data can be requested through this endpoint, or through the parks endpoint, as mentioned above.</p>
            <p><i class="fas fa-check-square"></i> "api/sportsclubs" - returns all sports clubs, with their listed parks that they manage.</p>
            <p><i class="fas fa-check-square"></i> "api/sportsclubs/sports" - returns all sport types. Note: This a fixed list based on the Local Parks Authority Decision, and will not be added to.</p>
            <p><i class="fas fa-check-square"></i> "api/sportsclubs/parkId" OR "api/parks/parkId/sportsclubs" - where 'parkId' is the park ID. Returns all sports clubs in the park.</p>
            <p><i class="fas fa-check-square"></i> "api/sportsclubs/clubId" - where 'clubId' is the ID of a sports club. This returns a singular sports club.</p>
            <p><i class="fas fa-check-square"></i> "api/parks/parkId/sportsclubs/clubId" - where 'clubId' is the ID of a sports club in the park with ID 'parkId'. This returns a singular sports club.</p>
            <p><i class="fas fa-check-square"></i> "api/parks/parkId/sportsclubs/sport" - where 'parkId' is the park ID and 'sport' is a register sport type. Returns all sports clubs in the park of this specified sport.</p>
        </div>

        <div class="row  alert-dark col-md-8 offset-md-2">
            <h3>Park Events</h3>
            <div class="row card border-dark d-block shadow-lg bg-dark text-light rounded p-1 m-1 " style="font-family: 'Lucida Console';">
                <p class="text-wrap">https://localparksapi.azurewebsites.net/api/parkevents</p>
            </div>
            <div>
                <p><i class="fas fa-spinner fa-pulse"></i> Please note: the endpoint "api/events/" is not recognised.</p>
                <p><i class="fas fa-spinner fa-pulse"></i> Currently only upcoming events can be seen - past events to be added.</p>
                <p><i class="fas fa-check-square"></i> "api/parkevents" - returns all park events in the future.</p>
                <p><i class="fas fa-check-square"></i> "api/parkevents/parkId" - where 'parkId' is the park with park events. Note the is the same data as obtained from: "api/parks/1/parkevents".</p>
                <p><i class="fas fa-check-square"></i> "api/parkevents/eventId" - where 'eventId' is an event in a park.</p>
                <p><i class="fas fa-check-square"></i> "api/parks/parkId/parkevents/eventId" - where 'parkId' is the park and where 'eventId' is the event is this park.</p>
                <p><i class="fas fa-check-square"></i> "api/parks/parkId/parkevents/date" - where 'parkId' is the park and where 'date' is the event date is this park. Format for date: 'yyyy-MM-dd'.</p>
            </div>
            <div>
                <h4>Editing Events</h4>
                <p><i class="fa fa-exclamation"></i> You can create, edit and delete your park events</p>
                <p><i class="fa fa-paint-brush"></i> To POST a park event to the endpoint: "api/parkevents", we recommend copying a model from a GET request.</p>
                <p><i class="fa fa-edit"></i> To PUT an existing park event to the endpoint: "api/parkevents/eventId", the 'eventId' must be included to reference the existing event, we recommend copying a model from a GET request.</p>
                <p><i class="fa fa-trash-alt"></i> To DELETE an existing park event with the endpoint: "api/parkevents/eventId", the 'eventId' must be included to reference the existing event to be deleted.</p>
            </div>
            <div>
                <p><i class="fa fa-exclamation"></i> To put yourself as the event organiser, set the organiser fields values to: "me", "this" or "user" - these will be automatically populated with your user info.</p>
            </div>
        </div>

    </div>
</div>